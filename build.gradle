buildscript {
    repositories {
        maven { url = "https://plugins.gradle.org/m2" }
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'net.decentstudio' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'sw-gambling-addon'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    implementation fg.deobf('software.bernie.geckolib:forge-1.12.2-geckolib:3.0.5')

    implementation "io.gitlab.hohserg.elegant.networking:elegant-networking-1.12:3.14"
    annotationProcessor "io.gitlab.hohserg.elegant.networking:annotation-processor:3.14"

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
//
//    implementation('org.json:json:20210307') {
//        exclude group: 'org.json', module: 'json'
//    }

//    implementation 'com.google.code.gson:gson:2.8.8'

    implementation ("net.minecraftforge:mergetool:0.2.3.3") { force = true }

    compile fileTree(dir: 'libs', include: '*.jar')
}

jar {
    manifest {
        attributes([
            "Specification-Title": "challengesaddon",
            "Specification-Vendor": "challengesaddonbyby",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"challengesaddonbyby",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

sourceSets.main {
    output.resourcesDir = output.classesDirs.singleFile
}
